# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
:inetRouter => {
        :box_name => "centos/7",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [                  
                   {adapter: 2, auto_config: false, virtualbox__intnet: "router-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "router-net"},
                ]
  },
  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "router-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "router-net"},                  
                   {ip: '192.168.0.129', adapter: 4, netmask: "255.255.255.252", virtualbox__intnet: "cror1-net"},                 
                ]
  },
  :office1Router => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.130', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "cror1-net"},
                   {ip: '192.168.2.1', adapter: 3, netmask: "255.255.255.192", virtualbox__intnet: "dev-net"},
                   {ip: '192.168.2.65', adapter: 4, netmask: "255.255.255.192", virtualbox__intnet: "test-net"},
                   {ip: '192.168.2.129', adapter: 5, netmask: "255.255.255.192", virtualbox__intnet: "man-net"},
                   {ip: '192.168.2.193', adapter: 6, netmask: "255.255.255.192", virtualbox__intnet: "hw-net"},
                ]
  },
  
  :testClient1 => {
    :box_name => "centos/7",
    :net => [
               {ip: '192.168.2.3', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "dev-net"},
               {adapter: 3, auto_config: false, virtualbox__intnet: "testLAN1"},
            ]
  },
  :testServer1 => {
    :box_name => "centos/7",
    :net => [
               {ip: '192.168.2.4', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "dev-net"},
               {adapter: 3, auto_config: false, virtualbox__intnet: "testLAN1"},
            ]
  },
  :testClient2 => {
    :box_name => "centos/7",
    :net => [
               {ip: '192.168.2.5', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "dev-net"},
               {adapter: 3, auto_config: false, virtualbox__intnet: "testLAN2"},
            ]
  },
  :testServer2 => {
    :box_name => "centos/7",
    :net => [
               {ip: '192.168.2.6', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "dev-net"},
               {adapter: 3, auto_config: false, virtualbox__intnet: "testLAN2"},
            ]
  },

  
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh                
        yum install -y wget traceroute
        SHELL
        
        case boxname.to_s
        when "inetRouter"
          box.vm.provision "shell", run: "always", path: "inetRouter.sh"
        when "centralRouter"
          box.vm.provision "shell", run: "always", path: "centralRouter.sh"
        when "office1Router"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sysctl net.ipv4.conf.all.forwarding=1
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            echo "GATEWAY=192.168.0.129" >> /etc/sysconfig/network-scripts/ifcfg-eth1         
            systemctl restart network
            sysctl net.ipv4.conf.all.forwarding=1  
            SHELL
        when "testClient1"
          box.vm.provision "shell", run: "always", path: "testClient1.sh"
        when "testServer1"
          box.vm.provision "shell", run: "always", path: "testServer1.sh"
        when "testClient2"
          box.vm.provision "shell", run: "always", path: "testClient2.sh"
        when "testServer2"
          box.vm.provision "shell", run: "always", path: "testServer2.sh"
        end

      end

  end
  
  
end